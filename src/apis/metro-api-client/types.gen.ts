// This file is auto-generated by @hey-api/openapi-ts

export type Direction = {
    id: string;
    name: string;
    destination: string;
    stops: Array<StopId>;
    order: {
        [key: string]: Array<(string)>;
    };
};

export type FullLine = {
    id: string;
    color: string;
    textColor: string;
    longName: string;
    url: string | null;
    directions: {
        [key: string]: Direction;
    };
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type Line = {
    id: string;
    color: string;
    textColor: string;
    longName: string | null;
    url: string | null;
    type: RouteTypeEnum;
};

export type Location = {
    lat: number;
    lon: number;
};

export type Operator = {
    id: string;
    name: string;
    fullName: string;
    shortName: string;
};

export type RouteTypeEnum = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 11 | 12;

export type Stop = {
    id: string;
    name: string;
    url: string | null;
    address: string | null;
    parentStation: string;
    location: Location | null;
    zoneId: string | null;
};

/**
 * Minimal information for stop
 */
export type StopId = {
    id: string;
    parentStation: string;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type PongResponse = unknown;

export type GetOperatorsByLocationData = {
    locationCode: string;
};

export type GetOperatorsByLocationResponse = Array<Operator>;

export type GetOperatorData = {
    locationCode: string;
    operatorId: string;
};

export type GetOperatorResponse = Operator;

export type GetStopsData = {
    locationCode: string;
    operatorId: string;
};

export type GetStopsResponse = Array<Stop>;

export type GetLinesData = {
    locationCode: string;
    operatorId: string;
};

export type GetLinesResponse = Array<Line>;

export type GetLineData = {
    locationCode: string;
    operatorId: string;
    routeId: string;
};

export type GetLineResponse = FullLine;

export type $OpenApiTs = {
    '/ping': {
        get: {
            res: {
                /**
                 * Successful Response
                 */
                200: unknown;
            };
        };
    };
    '/transit/{location_code}': {
        get: {
            req: GetOperatorsByLocationData;
            res: {
                /**
                 * Successful Response
                 */
                200: Array<Operator>;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/transit/{location_code}/{operator_id}': {
        get: {
            req: GetOperatorData;
            res: {
                /**
                 * Successful Response
                 */
                200: Operator;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/transit/{location_code}/{operator_id}/stops': {
        get: {
            req: GetStopsData;
            res: {
                /**
                 * Successful Response
                 */
                200: Array<Stop>;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/transit/{location_code}/{operator_id}/lines': {
        get: {
            req: GetLinesData;
            res: {
                /**
                 * Successful Response
                 */
                200: Array<Line>;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/transit/{location_code}/{operator_id}/lines/{route_id}': {
        get: {
            req: GetLineData;
            res: {
                /**
                 * Successful Response
                 */
                200: FullLine;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
};