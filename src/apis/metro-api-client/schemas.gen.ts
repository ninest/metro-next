// This file is auto-generated by @hey-api/openapi-ts

export const $Direction = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        destination: {
            type: 'string',
            title: 'Destination'
        },
        stops: {
            items: {
                '$ref': '#/components/schemas/StopId'
            },
            type: 'array',
            title: 'Stops'
        },
        order: {
            additionalProperties: {
                items: {
                    type: 'string'
                },
                type: 'array'
            },
            type: 'object',
            title: 'Order'
        }
    },
    type: 'object',
    required: ['id', 'name', 'destination', 'stops', 'order'],
    title: 'Direction'
} as const;

export const $FullLine = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        color: {
            type: 'string',
            title: 'Color'
        },
        textColor: {
            type: 'string',
            title: 'Textcolor'
        },
        longName: {
            type: 'string',
            title: 'Longname'
        },
        url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Url'
        },
        directions: {
            additionalProperties: {
                '$ref': '#/components/schemas/Direction'
            },
            type: 'object',
            title: 'Directions'
        }
    },
    type: 'object',
    required: ['id', 'color', 'textColor', 'longName', 'url', 'directions'],
    title: 'FullLine'
} as const;

export const $GTFSFeed = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        locationCode: {
            type: 'string',
            title: 'Locationcode'
        },
        url: {
            type: 'string',
            title: 'Url'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        operators: {
            items: {
                '$ref': '#/components/schemas/Operator'
            },
            type: 'array',
            title: 'Operators'
        }
    },
    type: 'object',
    required: ['id', 'locationCode', 'url', 'name', 'operators'],
    title: 'GTFSFeed'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $Line = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        color: {
            type: 'string',
            title: 'Color'
        },
        textColor: {
            type: 'string',
            title: 'Textcolor'
        },
        shortName: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Shortname'
        },
        longName: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Longname'
        },
        url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Url'
        },
        type: {
            '$ref': '#/components/schemas/RouteTypeEnum'
        }
    },
    type: 'object',
    required: ['id', 'color', 'textColor', 'shortName', 'longName', 'url', 'type'],
    title: 'Line'
} as const;

export const $Location = {
    properties: {
        lat: {
            type: 'number',
            title: 'Lat'
        },
        lon: {
            type: 'number',
            title: 'Lon'
        }
    },
    type: 'object',
    required: ['lat', 'lon'],
    title: 'Location'
} as const;

export const $Operator = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        fullName: {
            type: 'string',
            title: 'Fullname'
        },
        shortName: {
            type: 'string',
            title: 'Shortname'
        }
    },
    type: 'object',
    required: ['id', 'name', 'fullName', 'shortName'],
    title: 'Operator'
} as const;

export const $RouteTypeEnum = {
    type: 'integer',
    enum: [0, 1, 2, 3, 4, 5, 6, 7, 11, 12],
    title: 'RouteTypeEnum'
} as const;

export const $Stop = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        url: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Url'
        },
        address: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Address'
        },
        parentStation: {
            type: 'string',
            title: 'Parentstation'
        },
        location: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/Location'
                },
                {
                    type: 'null'
                }
            ]
        },
        zoneId: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Zoneid'
        }
    },
    type: 'object',
    required: ['id', 'name', 'url', 'address', 'parentStation', 'location', 'zoneId'],
    title: 'Stop'
} as const;

export const $StopId = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        parentStation: {
            type: 'string',
            title: 'Parentstation'
        }
    },
    type: 'object',
    required: ['id', 'parentStation'],
    title: 'StopId',
    description: 'Minimal information for stop'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;